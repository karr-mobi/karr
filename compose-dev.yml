services:
    web:
        build:
            context: .
            dockerfile: ./apps/web/Dockerfile
        networks:
            - karr_network
        secrets:
            - db-password
        environment:
            - CONFIG_DIR=/app/config
            - PORT=3000
            - DB_HOST=db
            - DB_PORT=5432
            - DB_NAME=karr
            - DB_USER=postgres
            - DB_PASSWORD_FILE=/run/secrets/db-password
        ports:
            - 3000:3000
        volumes:
            - ./config:/app/config
        depends_on:
            - db

    auth:
        build:
            context: .
            dockerfile: ./apps/auth-server/Dockerfile
        environment:
            - CONFIG_DIR=/app/config
        ports:
            - 1993:1993
        volumes:
            - auth_data:/app/.data
            - ./config:/app/config

    auth-deno:
        build:
            context: .
            dockerfile: ./apps/auth-server/Dockerfile-deno
        environment:
            - CONFIG_DIR=/app/config
        ports:
            - 1993:1993
        volumes:
            - auth_data:/app/.data
            - ./config:/app/config

    db:
        image: postgres:17-alpine
        networks:
            - karr_network
        ports:
            - 5432:5432
        secrets:
            - db-password
        environment:
            - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
            - POSTGRES_USER=postgres
            - POSTGRES_DB=karr
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U postgres"]
            interval: 5s
            timeout: 5s
            retries: 5

    caddy:
        build:
            context: ./apps/caddy
            dockerfile: Dockerfile
        networks:
            - karr_network
        restart: unless-stopped
        ports:
            - 80:80
            #- "443:443"
            #- "443:443/udp"
        environment:
            - TZ=Europe/Paris
            - SITE_ADDRESS=:80
            - API_PORT=1993
            - WEB_PORT=3000
            - CADDY_DISABLE_TLS=1
        volumes:
            - ./apps/caddy/data:/data
            - ./apps/caddy/config:/config

volumes:
    caddy_data:
    caddy_config:
    auth_data:

secrets:
    db-password:
        file: ./pass.txt

networks:
    karr_network:
