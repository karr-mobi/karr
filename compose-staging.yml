name: karr_staging

# Reverse Proxy is not included, this assumes the auth server is running separately.

services:
    web:
        image: ghcr.io/karr-mobi/karr-web:latest
        networks:
            - karr_network_staging
        secrets:
            - db-password
        environment:
            - LOG_LEVEL=debug
            - DB_USER=karr
            - DB_HOST=db
            - DB_PASSWORD_FILE=/run/secrets/db-password
            - PORT=3000
        volumes:
            - /srv/http/karr/karr.config.yaml:/app/config/karr.config.yaml
        depends_on:
            - db

    db:
        image: postgres:17-alpine
        networks:
            - karr_network_staging
        secrets:
            - db-password
        volumes:
            - postgres_data:/var/lib/postgresql/data
        environment:
            - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
            - POSTGRES_USER=karr
            - POSTGRES_DB=karr
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U karr"]
            interval: 5s
            timeout: 5s
            retries: 5

    auth:
        image: ghcr.io/karr-mobi/karr-auth-server:latest-deno
        networks:
            - karr_network_staging
        environment:
            - CONFIG_DIR=/app/config
        ports:
            - 1993:1993
        volumes:
            - auth_data:/app/.data
            - ./config:/app/config

    caddy:
        image: ghcr.io/karr-mobi/karr-caddy:latest
        networks:
            - karr_network_staging
        ports:
            - "3555:3555"
        environment:
            - SITE_ADDRESS=:3555
            - AUTH_PORT=1993
            - WEB_PORT=3000
        volumes:
            - caddy_data:/data
            - caddy_config:/config

volumes:
    postgres_data:
    caddy_data:
    caddy_config:
    auth_data:

networks:
    karr_network_staging:

secrets:
    db-password:
        file: /srv/http/karr-staging/pass.txt
